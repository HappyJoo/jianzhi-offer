# python 有没有感受到python的便捷
# 时间复杂度 - O(n) 从头到尾遍历一次，替换掉空格
# 空间复杂度 - O(1) 没有额外的空间
class Solution:
    def replaceSpace(self, s: str) -> str:
        return s.replace(' ', '%20')

# Python 数组解法
class Solution:
    def replaceSpace(self, s: str) -> str:
        res = []
        for i in s:
            if i == ' ':
                res.append("%20")
            else:
                res.append(i)
        return ''.join(res)
        


# C 上面一句，下面这么多句，还容易写错，快哭了
char* replaceSpace(char* s){
    int l = strlen(s), j = 0;
    char *res = (char*)malloc((3*l + 1) * sizeof(char));
    for (int i = 0; i < l; i++)
    {
        if (s[i] == ' ')
        {
            res[j++] = '%';
            res[j++] = '2';
            res[j++] = '0';
        } else{
            res[j++] = s[i];
        }
    }
    res[j] = '\0';
    return res;
}


# Go
func replaceSpace(s string) string {
    res := ""
    for _, v := range s {
        if v == ' ' {
            res += "%20"
        } else {
            res += string(v)
        }
    }
    return res
}



