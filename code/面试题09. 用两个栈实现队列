(Krahets 同学的解答非常精彩)[https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/solution/mian-shi-ti-09-yong-liang-ge-zhan-shi-xian-dui-l-2/]

## python3
class CQueue:
    def __init__(self):
        self.A, self.B = [], []

    def appendTail(self, value: int) -> None:
        self.A.append(value)

    def deleteHead(self) -> int:
        if self.B: return self.B.pop()
        if not self.A: return -1
        while self.A:
            self.B.append(self.A.pop())
        return self.B.pop()


// C
typedef struct {
    int data1[1000], t1;
    int data2[2000], t2;
} CQueue;


CQueue* cQueueCreate() {
    CQueue *queue = (CQueue*)malloc(sizeof(CQueue));
    queue->t1 = -1;
    queue->t2 = -1;
    return queue;
}

void cQueueAppendTail(CQueue* obj, int value) {
    obj->data1[++obj->t1] = value;
}

int cQueueDeleteHead(CQueue* obj) {
    if (obj->t2 != -1) return obj->data2[obj->t2--];
    if (obj->t1 == -1) return -1;
    while (obj->t1 != -1)
    {
        obj->data2[++obj->t2] = obj->data1[obj->t1--];
    }
    return obj->data2[obj->t2--];
}

void cQueueFree(CQueue* obj) {
    free(obj);
}

/**
 * Your CQueue struct will be instantiated and called as such:
 * CQueue* obj = cQueueCreate();
 * cQueueAppendTail(obj, value);
 
 * int param_2 = cQueueDeleteHead(obj);
 
 * cQueueFree(obj);
*/