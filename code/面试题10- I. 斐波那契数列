// C 
// 从第0位开始，数组的每一位都计算出来对应的斐波那契值，然后返回。
int fib(int n){
    if(n<0) return -1;
    if(n==0) return 0;
    if(n==1) return 1;
    else{
        int dp[n+1];
        dp[0]=0;
        dp[1]=1;
        for(int i=2;i<n+1;i++){
            dp[i]=(dp[i-1]+dp[i-2])%1000000007;
        }
        return dp[n];
    }

// C
// 舍弃前面的所有已计算出来的数值，只保留需要的那一个，然后返回。
int fib(int n){
    if (n == 0) return 0;
    if (n == 1) return 1;
    if (n < 0) return -1;

    int dp[3] = {0, 1, 1};
    for (int i = 2; i < n; i++)
    {
        dp[0] = dp[1];
        dp[1] = dp[2];
        dp[2] = (dp[0] + dp[1]) % 1000000007;
    }
    return dp[2];
}
