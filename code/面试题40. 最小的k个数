# Python 排序法
# 时间复杂度 O(NlogN) 
# 空间复杂度 O(logn)，排序所需额外的空间复杂度为 O(logn)。
class Solution:
    def getLeastNumbers(self, arr: List[int], k: int) -> List[int]:
        arr.sort()
        return arr[:k]

# Python 堆，但是利用了 Python 的 heapq 库，所以其实还是没有手写。
class Solution:
    def getLeastNumbers(self, arr: List[int], k: int) -> List[int]:
        if k == 0:
            return list()

        # return headpq.nsmallest(k, arr)
        hp = [-x for x in arr[:k]]
        heapq.heapify(hp)
        for i in range(k, len(arr)):
            if -hp[0] > arr[i]:
                heapq.heappop(hp)
                heapq.heappush(hp, -arr[i])
        ans = [-x for x in hp]
        return ans
