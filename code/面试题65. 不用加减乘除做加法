# Python 
# 负数的二进制表示是用补码表示的，就是正码除了符号位全部取反，然后加一。
# 比如 -5 就是 11111011。这个是补码，从补码返回正码是：10000101
# ~ 是按位取反
# 参考：https://leetcode-cn.com/problems/bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/solution/mian-shi-ti-65-bu-yong-jia-jian-cheng-chu-zuo-ji-7/
# 时间复杂度 - O(1) 
# 空间复杂度 - O(1)
class Solution:
    def add(self, a: int, b: int) -> int:
        x = 0xffffffff
        a, b = a & x, b & x
        while b != 0:
            a, b = (a ^ b), (a & b) << 1 & x
        return a if a <= 0x7fffffff else ~(a ^ x)



# C C语言的 int 左移会溢出，所以要去掉符号位。
int add(int a, int b){
    while (b != 0) {
        int c = (unsigned int)(a & b) << 1;
        a ^= b;
        b = c;
    }
    return a;
}
